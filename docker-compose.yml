services:
  # reverse-proxy:
  #   image: nginx:latest
  #   container_name: nginx
  #   volumes:
  #     - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - api
  #     - elven-client
  #     - dwarven-client
  #     - human-client
  #   networks:
  #     - app-network

  api:
    build:
      context: .
      dockerfile: ${API_DOCKERFILE}
      target: dev
    container_name: ${PROJECT_NAME}-api
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${API_PORT}
      - REDIS_URL=redis://redis:6379
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - redis
    volumes:
      - ./apps/api/src:/app/apps/api/src
      - ./apps/api/__data:/app/apps/api/__data
    networks:
      - app-network

  # websocket-service:
  #   build:
  #     context: ./apps/websocket-service
  #     dockerfile: Dockerfile
  #   container_name: websocket-service
  #   environment:
  #     - NODE_ENV=development
  #   ports:
  #     - "3002:3002"
  #   networks:
  #     - app-network

  redis:
    image: redis:alpine
    container_name: ${PROJECT_NAME}-redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  power-client:
    build:
      context: .
      dockerfile: ${POWER_CLIENT_DOCKERFILE}
      target: dev
    container_name: ${PROJECT_NAME}-power-client
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=${POWER_CLIENT_PORT}
      - API_URL=http://api:${API_PORT}
    ports:
      - "${POWER_CLIENT_PORT}:${POWER_CLIENT_PORT}"
    networks:
      - app-network

  elven-client:
    build:
      context: .
      dockerfile: ${ELVEN_CLIENT_DOCKERFILE}
      target: dev
    container_name: ${PROJECT_NAME}-elven-client
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=${ELVEN_CLIENT_PORT}
      - API_URL=http://api:${API_PORT}
    volumes:
      - ./apps/elven-client/src:/app/apps/elven-client/src
      - ./apps/elven-client/public:/app/apps/elven-client/public
    ports:
      - "${ELVEN_CLIENT_PORT}:${ELVEN_CLIENT_PORT}"
    networks:
      - app-network

  dwarven-client:
    build:
      context: .
      dockerfile: ${DWARVEN_CLIENT_DOCKERFILE}
      target: dev
    container_name: ${PROJECT_NAME}-dwarven-client
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=${DWARVEN_CLIENT_PORT}
      - API_URL=http://api:${API_PORT}
    volumes:
      - ./apps/dwarven-client/src:/app/apps/dwarven-client/src
      - ./apps/dwarven-client/public:/app/apps/dwarven-client/public
    ports:
      - "${DWARVEN_CLIENT_PORT}:${DWARVEN_CLIENT_PORT}"
    networks:
      - app-network

  human-client:
    build:
      context: .
      dockerfile: ${HUMAN_CLIENT_DOCKERFILE}
      target: dev
    container_name: ${PROJECT_NAME}-human-client
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=${HUMAN_CLIENT_PORT}
      - API_URL=http://api:${API_PORT}
    volumes:
      - ./apps/human-client/src:/app/apps/human-client/src
      - ./apps/human-client/public:/app/apps/human-client/public
    ports:
      - "${HUMAN_CLIENT_PORT}:${HUMAN_CLIENT_PORT}"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
