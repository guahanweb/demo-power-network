services:
  # Reverse Proxy: redirects actual hosts to the downstream services
  reverse-proxy:
    image: nginx:latest
    container_name: ${PROJECT_NAME}-nginx
    volumes:
      - ./infrastructure/nginx/proxy.conf.template:/etc/nginx/templates/default.conf.template:ro
    ports:
      - "${PROXY_PORT}:${PROXY_PORT}"
    depends_on:
      - elven-client
      - dwarven-client
      - human-client
      - power-client
    environment:
      - DWARVEN_CLIENT_SERVICE_ADDR=dwarven-client:${DWARVEN_CLIENT_PORT}
      - ELVEN_CLIENT_SERVICE_ADDR=elven-client:${ELVEN_CLIENT_PORT}
      - HUMAN_CLIENT_SERVICE_ADDR=human-client:${HUMAN_CLIENT_PORT}
      - POWER_CLIENT_SERVICE_ADDR=power-client:${POWER_CLIENT_PORT}
      - NGINX_PORT=${PROXY_PORT}
    networks:
      - app-network

  # Backend API Servkce (the true POWER of the Ring Network)
  api:
    build:
      context: .
      dockerfile: ${API_DOCKERFILE}
      target: dev
      args:
        - WORKSPACE=${API_WORKSPACE}
    container_name: ${PROJECT_NAME}-api
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${API_PORT}
      - REDIS_URL=redis://redis:6379
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - redis
    volumes:
      - ./apps/api/src:/app/apps/api/src
      - ./apps/api/__data:/app/apps/api/__data
    networks:
      - app-network

  # Redis: simple kay-value store for demo and caching
  redis:
    image: redis:alpine
    container_name: ${PROJECT_NAME}-redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Power Client: Admin interface to view all preferences
  power-client:
    build:
      context: .
      dockerfile: ${POWER_CLIENT_DOCKERFILE}
      target: dev
      args:
        - WORKSPACE=${POWER_CLIENT_WORKSPACE}
        - TEMPLATE_NAME=${POWER_CLIENT_TEMPLATE}
    depends_on:
      - api
    container_name: ${PROJECT_NAME}-power-client
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=${POWER_CLIENT_PORT}
      - API_URL=http://api:${API_PORT}
      - API_SERVICE_ADDR=api:${API_PORT}
      - FRONTEND_CLIENT_ID=power
      - NGINX_PORT=${POWER_CLIENT_PORT}
    volumes:
      - ./apps/power-client/src:/app/apps/power-client/src
      - ./apps/power-client/public:/app/apps/power-client/public
    ports:
      - "${POWER_CLIENT_PORT}:${POWER_CLIENT_PORT}"
    networks:
      - app-network

  # Elven Client: Restricted access to only global and elven preferences
  elven-client:
    build:
      context: .
      dockerfile: ${ELVEN_CLIENT_DOCKERFILE}
      target: dev
      args:
        - WORKSPACE=${ELVEN_CLIENT_WORKSPACE}
        - TEMPLATE_NAME=${ELVEN_CLIENT_TEMPLATE}
    depends_on:
      - api
    container_name: ${PROJECT_NAME}-elven-client
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=${ELVEN_CLIENT_PORT}
      - API_URL=http://api:${API_PORT}
      - API_SERVICE_ADDR=api:${API_PORT}
      - FRONTEND_CLIENT_ID=elven
      - NGINX_PORT=${ELVEN_CLIENT_PORT}
    volumes:
      - ./apps/elven-client/src:/app/apps/elven-client/src
      - ./apps/elven-client/public:/app/apps/elven-client/public
    ports:
      - "${ELVEN_CLIENT_PORT}:${ELVEN_CLIENT_PORT}"
    networks:
      - app-network

  # Dwarven Client: Restricted access to only global and dwarven preferences
  dwarven-client:
    build:
      # For example, this client is running prod target
      context: .
      dockerfile: ${DWARVEN_CLIENT_DOCKERFILE}
      target: prod
      args:
        - WORKSPACE=${DWARVEN_CLIENT_WORKSPACE}
        - TEMPLATE_NAME=${DWARVEN_CLIENT_TEMPLATE}
    depends_on:
      - api
    container_name: ${PROJECT_NAME}-dwarven-client
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=${DWARVEN_CLIENT_PORT}
      - API_URL=http://api:${API_PORT}
      - API_SERVICE_ADDR=api:${API_PORT}
      - FRONTEND_CLIENT_ID=dwarven
      - NGINX_PORT=${DWARVEN_CLIENT_PORT}
    # volumes:
      # - ./apps/dwarven-client/src:/app/apps/dwarven-client/src
      # - ./apps/dwarven-client/public:/app/apps/dwarven-client/public
    ports:
      - "${DWARVEN_CLIENT_PORT}:${DWARVEN_CLIENT_PORT}"
    networks:
      - app-network

  # Human Client: Restricted access to only global and human preferences
  human-client:
    build:
      context: .
      dockerfile: ${HUMAN_CLIENT_DOCKERFILE}
      target: dev
      args:
        - WORKSPACE=${HUMAN_CLIENT_WORKSPACE}
        - TEMPLATE_NAME=${HUMAN_CLIENT_TEMPLATE}
    depends_on:
      - api
    container_name: ${PROJECT_NAME}-human-client
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=${HUMAN_CLIENT_PORT}
      - API_URL=http://api:${API_PORT}
      - API_SERVICE_ADDR=api:${API_PORT}
      - FRONTEND_CLIENT_ID=human
      - NGINX_PORT=${HUMAN_CLIENT_PORT}
    volumes:
      - ./apps/human-client/src:/app/apps/human-client/src
      - ./apps/human-client/public:/app/apps/human-client/public
    ports:
      - "${HUMAN_CLIENT_PORT}:${HUMAN_CLIENT_PORT}"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
